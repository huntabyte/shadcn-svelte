{
	"name": "sidebar-11",
	"type": "registry:block",
	"dependencies": [
		"lucide-svelte"
	],
	"registryDependencies": [
		"breadcrumb",
		"separator",
		"sidebar",
		"collapsible"
	],
	"files": [
		{
			"name": "+page.svelte",
			"content": "<script lang=\"ts\">\n\timport AppSidebar from \"$lib/registry/default/block/sidebar-11/components/app-sidebar.svelte\";\n\timport * as Breadcrumb from \"$lib/registry/default/ui/breadcrumb/index.js\";\n\timport { Separator } from \"$lib/registry/default/ui/separator/index.js\";\n\timport * as Sidebar from \"$lib/registry/default/ui/sidebar/index.js\";\n</script>\n\n<Sidebar.Provider>\n\t<AppSidebar />\n\t<Sidebar.Inset>\n\t\t<header class=\"flex h-16 shrink-0 items-center gap-2 border-b px-4\">\n\t\t\t<Sidebar.Trigger class=\"-ml-1\" />\n\t\t\t<Separator orientation=\"vertical\" class=\"mr-2 h-4\" />\n\t\t\t<Breadcrumb.Root>\n\t\t\t\t<Breadcrumb.List>\n\t\t\t\t\t<Breadcrumb.Item class=\"hidden md:block\">\n\t\t\t\t\t\t<Breadcrumb.Link href=\"#\">lib</Breadcrumb.Link>\n\t\t\t\t\t</Breadcrumb.Item>\n\t\t\t\t\t<Breadcrumb.Separator class=\"hidden md:block\" />\n\t\t\t\t\t<Breadcrumb.Item class=\"hidden md:block\">\n\t\t\t\t\t\t<Breadcrumb.Link href=\"#\">components</Breadcrumb.Link>\n\t\t\t\t\t</Breadcrumb.Item>\n\t\t\t\t\t<Breadcrumb.Separator class=\"hidden md:block\" />\n\t\t\t\t\t<Breadcrumb.Item>\n\t\t\t\t\t\t<Breadcrumb.Page>button.svelte</Breadcrumb.Page>\n\t\t\t\t\t</Breadcrumb.Item>\n\t\t\t\t</Breadcrumb.List>\n\t\t\t</Breadcrumb.Root>\n\t\t</header>\n\t\t<div class=\"flex flex-1 flex-col gap-4 p-4\">\n\t\t\t<div class=\"grid auto-rows-min gap-4 md:grid-cols-3\">\n\t\t\t\t<div class=\"bg-muted/50 aspect-video rounded-xl\"></div>\n\t\t\t\t<div class=\"bg-muted/50 aspect-video rounded-xl\"></div>\n\t\t\t\t<div class=\"bg-muted/50 aspect-video rounded-xl\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"bg-muted/50 min-h-[100vh] flex-1 rounded-xl md:min-h-min\"></div>\n\t\t</div>\n\t</Sidebar.Inset>\n</Sidebar.Provider>\n",
			"type": "registry:page",
			"target": "sidebar-page.svelte"
		},
		{
			"name": "app-sidebar.svelte",
			"content": "<script lang=\"ts\" module>\n\t// This is sample data.\n\tconst data = {\n\t\tchanges: [\n\t\t\t{\n\t\t\t\tfile: \"README.md\",\n\t\t\t\tstate: \"M\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfile: \"routes/+page.svelte\",\n\t\t\t\tstate: \"U\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfile: \"routes/+layout.svelte\",\n\t\t\t\tstate: \"M\",\n\t\t\t},\n\t\t],\n\t\ttree: [\n\t\t\t[\"lib\", [\"components\", \"button.svelte\", \"card.svelte\"], \"utils.ts\"],\n\t\t\t[\n\t\t\t\t\"routes\",\n\t\t\t\t[\"hello\", \"+page.svelte\", \"+page.ts\"],\n\t\t\t\t\"+page.svelte\",\n\t\t\t\t\"+page.server.ts\",\n\t\t\t\t\"+layout.svelte\",\n\t\t\t],\n\t\t\t[\"static\", \"favicon.ico\", \"svelte.svg\"],\n\t\t\t\"eslint.config.js\",\n\t\t\t\".gitignore\",\n\t\t\t\"svelte.config.js\",\n\t\t\t\"tailwind.config.js\",\n\t\t\t\"package.json\",\n\t\t\t\"README.md\",\n\t\t],\n\t};\n</script>\n\n<script lang=\"ts\">\n\timport * as Collapsible from \"$lib/registry/default/ui/collapsible/index.js\";\n\timport * as Sidebar from \"$lib/registry/default/ui/sidebar/index.js\";\n\timport ChevronRight from \"lucide-svelte/icons/chevron-right\";\n\timport File from \"lucide-svelte/icons/file\";\n\timport Folder from \"lucide-svelte/icons/folder\";\n\timport type { ComponentProps } from \"svelte\";\n\n\tlet { ref = $bindable(null), ...restProps }: ComponentProps<typeof Sidebar.Root> = $props();\n</script>\n\n<Sidebar.Root bind:ref {...restProps}>\n\t<Sidebar.Content>\n\t\t<Sidebar.Group>\n\t\t\t<Sidebar.GroupLabel>Changes</Sidebar.GroupLabel>\n\t\t\t<Sidebar.GroupContent>\n\t\t\t\t<Sidebar.Menu>\n\t\t\t\t\t{#each data.changes as item, index (index)}\n\t\t\t\t\t\t<Sidebar.MenuItem>\n\t\t\t\t\t\t\t<Sidebar.MenuButton>\n\t\t\t\t\t\t\t\t<File />\n\t\t\t\t\t\t\t\t{item.file}\n\t\t\t\t\t\t\t</Sidebar.MenuButton>\n\t\t\t\t\t\t\t<Sidebar.MenuBadge>{item.state}</Sidebar.MenuBadge>\n\t\t\t\t\t\t</Sidebar.MenuItem>\n\t\t\t\t\t{/each}\n\t\t\t\t</Sidebar.Menu>\n\t\t\t</Sidebar.GroupContent>\n\t\t</Sidebar.Group>\n\t\t<Sidebar.Group>\n\t\t\t<Sidebar.GroupLabel>Files</Sidebar.GroupLabel>\n\t\t\t<Sidebar.GroupContent>\n\t\t\t\t<Sidebar.Menu>\n\t\t\t\t\t{#each data.tree as item, index (index)}\n\t\t\t\t\t\t{@render Tree({ item })}\n\t\t\t\t\t{/each}\n\t\t\t\t</Sidebar.Menu>\n\t\t\t</Sidebar.GroupContent>\n\t\t</Sidebar.Group>\n\t</Sidebar.Content>\n\t<Sidebar.Rail />\n</Sidebar.Root>\n\n<!-- eslint-disable-next-line @typescript-eslint/no-explicit-any -->\n{#snippet Tree({ item }: { item: string | any[] })}\n\t{@const [name, ...items] = Array.isArray(item) ? item : [item]}\n\t{#if !items.length}\n\t\t<Sidebar.MenuButton\n\t\t\tisActive={name === \"button.svelte\"}\n\t\t\tclass=\"data-[active=true]:bg-transparent\"\n\t\t>\n\t\t\t<File />\n\t\t\t{name}\n\t\t</Sidebar.MenuButton>\n\t{:else}\n\t\t<Sidebar.MenuItem>\n\t\t\t<Collapsible.Root\n\t\t\t\tclass=\"group/collapsible [&[data-state=open]>button>svg:first-child]:rotate-90\"\n\t\t\t\topen={name === \"lib\" || name === \"components\"}\n\t\t\t>\n\t\t\t\t<Collapsible.Trigger>\n\t\t\t\t\t{#snippet child({ props })}\n\t\t\t\t\t\t<Sidebar.MenuButton {...props}>\n\t\t\t\t\t\t\t<ChevronRight className=\"transition-transform\" />\n\t\t\t\t\t\t\t<Folder />\n\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t</Sidebar.MenuButton>\n\t\t\t\t\t{/snippet}\n\t\t\t\t</Collapsible.Trigger>\n\t\t\t\t<Collapsible.Content>\n\t\t\t\t\t<Sidebar.MenuSub>\n\t\t\t\t\t\t{#each items as subItem, index (index)}\n\t\t\t\t\t\t\t{@render Tree({ item: subItem })}\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</Sidebar.MenuSub>\n\t\t\t\t</Collapsible.Content>\n\t\t\t</Collapsible.Root>\n\t\t</Sidebar.MenuItem>\n\t{/if}\n{/snippet}\n",
			"type": "registry:component",
			"target": "app-sidebar.svelte"
		}
	]
}
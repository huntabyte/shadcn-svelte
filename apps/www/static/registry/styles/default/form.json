{
  "name": "form",
  "dependencies": [],
  "registryDependencies": [
    "utils",
    "input",
    "label",
    "textarea"
  ],
  "files": [
    {
      "name": "form-description.svelte",
      "content": "<script lang=\"ts\">\n\timport { Form as FormPrimitive } from \"formsnap\";\n\timport { cn } from \"@/utils\";\n\timport type { HTMLAttributes } from \"svelte/elements\";\n\n\ttype $$Props = HTMLAttributes<HTMLSpanElement>;\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<FormPrimitive.Description\n\tclass={cn(\"text-sm text-muted-foreground\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</FormPrimitive.Description>\n"
    },
    {
      "name": "form-input.svelte",
      "content": "<script lang=\"ts\">\n\timport { getFormField } from \"formsnap\";\n\timport type { HTMLInputAttributes } from \"svelte/elements\";\n\timport { Input, type InputEvents } from \"@/registry/default/ui/input\";\n\n\ttype $$Props = HTMLInputAttributes;\n\ttype $$Events = InputEvents;\n\n\tconst { attrStore, value } = getFormField();\n</script>\n\n<Input\n\t{...$attrStore}\n\tbind:value={$value}\n\t{...$$restProps}\n\ton:blur\n\ton:change\n\ton:click\n\ton:focus\n\ton:keydown\n\ton:keypress\n\ton:keyup\n\ton:mouseover\n\ton:mouseenter\n\ton:mouseleave\n\ton:paste\n\ton:input\n/>\n"
    },
    {
      "name": "form-item.svelte",
      "content": "<script lang=\"ts\">\n\timport { cn } from \"@/utils\";\n\timport type { HTMLAttributes } from \"svelte/elements\";\n\n\ttype $$Props = HTMLAttributes<HTMLDivElement>;\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<div class={cn(\"space-y-2\", className)} {...$$restProps}>\n\t<slot />\n</div>\n"
    },
    {
      "name": "form-label.svelte",
      "content": "<script lang=\"ts\">\n\timport type { Label as LabelPrimitive } from \"bits-ui\";\n\timport { getFormField } from \"formsnap\";\n\timport { cn } from \"@/utils\";\n\timport { Label } from \"@/registry/default/ui/label\";\n\n\ttype $$Props = LabelPrimitive.Props;\n\n\tlet className: $$Props[\"class\"] = undefined;\n\texport { className as class };\n\n\tconst { errors, ids } = getFormField();\n</script>\n\n<Label\n\tfor={ids.input}\n\tclass={cn($errors && \"text-destructive\", className)}\n\t{...$$restProps}\n>\n\t<slot />\n</Label>\n"
    },
    {
      "name": "form-textarea.svelte",
      "content": "<script lang=\"ts\">\n\timport { getFormField } from \"formsnap\";\n\timport type { HTMLTextareaAttributes } from \"svelte/elements\";\n\timport type { TextareaGetFormField } from \".\";\n\timport {\n\t\tTextarea,\n\t\ttype TextareaEvents\n\t} from \"@/registry/default/ui/textarea\";\n\n\ttype $$Props = HTMLTextareaAttributes;\n\ttype $$Events = TextareaEvents;\n\n\tconst { attrStore, value } = getFormField() as TextareaGetFormField;\n</script>\n\n<Textarea\n\t{...$attrStore}\n\tbind:value={$value}\n\t{...$$restProps}\n\ton:blur\n\ton:change\n\ton:click\n\ton:focus\n\ton:keydown\n\ton:keypress\n\ton:keyup\n\ton:mouseover\n\ton:mouseenter\n\ton:mouseleave\n\ton:paste\n\ton:input\n/>\n"
    },
    {
      "name": "form-validation.svelte",
      "content": "<script lang=\"ts\">\n\timport { Form as FormPrimitive } from \"formsnap\";\n\timport { cn } from \"@/utils\";\n\timport type { HTMLAttributes } from \"svelte/elements\";\n\n\ttype $$Props = HTMLAttributes<HTMLSpanElement>;\n\tlet className: string | undefined | null = undefined;\n\texport { className as class };\n</script>\n\n<FormPrimitive.Validation\n\tclass={cn(\"text-sm font-medium text-destructive\", className)}\n\t{...$$restProps}\n/>\n"
    },
    {
      "name": "index.ts",
      "content": "import { Form as FormPrimitive, getFormField } from \"formsnap\";\nimport type { Writable } from \"svelte/store\";\nimport Item from \"./form-item.svelte\";\nimport Input from \"./form-input.svelte\";\nimport Textarea from \"./form-textarea.svelte\";\nimport Description from \"./form-description.svelte\";\nimport Label from \"./form-label.svelte\";\nimport Validation from \"./form-validation.svelte\";\n\nconst Root = FormPrimitive.Root;\nconst Field = FormPrimitive.Field;\n\nexport type TextareaGetFormField = Omit<\n\tReturnType<typeof getFormField>,\n\t\"value\"\n> & {\n\tvalue: Writable<string>;\n};\n\nexport {\n\tRoot,\n\tField,\n\tItem,\n\tInput,\n\tTextarea,\n\tDescription,\n\tLabel,\n\tValidation,\n\t//\n\tRoot as Form,\n\tField as FormField,\n\tItem as FormItem,\n\tInput as FormInput,\n\tTextarea as FormTextarea,\n\tDescription as FormDescription,\n\tLabel as FormLabel,\n\tValidation as FormValidation\n};\n"
    }
  ],
  "type": "components:ui"
}
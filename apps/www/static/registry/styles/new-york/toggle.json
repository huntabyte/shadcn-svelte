{
  "name": "toggle",
  "dependencies": [
    "bits-ui"
  ],
  "registryDependencies": [],
  "files": [
    {
      "name": "index.ts",
      "content": "import Root from \"./toggle.svelte\";\nimport { tv, type VariantProps } from \"tailwind-variants\";\n\nexport const toggleVariants = tv({\n\tbase: \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground\",\n\tvariants: {\n\t\tvariant: {\n\t\t\tdefault: \"bg-transparent\",\n\t\t\toutline:\n\t\t\t\t\"border border-input bg-transparent shadow-sm hover:bg-accent hover:text-accent-foreground\"\n\t\t},\n\t\tsize: {\n\t\t\tdefault: \"h-9 px-3\",\n\t\t\tsm: \"h-8 px-2\",\n\t\t\tlg: \"h-10 px-3\"\n\t\t}\n\t},\n\tdefaultVariants: {\n\t\tvariant: \"default\",\n\t\tsize: \"default\"\n\t}\n});\n\nexport type Variant = VariantProps<typeof toggleVariants>[\"variant\"];\nexport type Size = VariantProps<typeof toggleVariants>[\"size\"];\n\nexport {\n\tRoot,\n\t//\n\tRoot as Toggle\n};\n"
    },
    {
      "name": "toggle.svelte",
      "content": "<script lang=\"ts\">\n\timport { Toggle as TogglePrimitive } from \"bits-ui\";\n\timport { toggleVariants, type Variant, type Size } from \".\";\n\timport { cn } from \"$lib/utils\";\n\n\ttype $$Props = TogglePrimitive.Props & {\n\t\tvariant?: Variant;\n\t\tsize?: Size;\n\t};\n\ttype $$Events = TogglePrimitive.Events;\n\n\tlet className: $$Props[\"class\"] = undefined;\n\texport let variant: $$Props[\"variant\"] = \"default\";\n\texport let size: $$Props[\"size\"] = \"default\";\n\texport let pressed: $$Props[\"pressed\"] = undefined;\n\texport { className as class };\n</script>\n\n<TogglePrimitive.Root\n\tbind:pressed\n\tclass={cn(toggleVariants({ variant, size, className }))}\n\t{...$$restProps}\n\ton:click\n\ton:keydown\n>\n\t<slot />\n</TogglePrimitive.Root>\n"
    }
  ],
  "type": "components:ui"
}